{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"my",
				"myshape"
			],
			[
				"ch",
				"choice"
			],
			[
				"co",
				"comment_id"
			],
			[
				"w",
				"w"
			],
			[
				"post",
				"posts_replied_to"
			],
			[
				"com",
				"comments_replied_to"
			],
			[
				"n",
				"numreplies"
			],
			[
				"c",
				"comments"
			],
			[
				"cl",
				"clean_comment"
			],
			[
				"Mo",
				"Mode1"
			],
			[
				"en",
				"encode"
			],
			[
				"try",
				"try\tTry/Except"
			],
			[
				"pr",
				"print"
			],
			[
				"de",
				"def\tFunction"
			],
			[
				"Mode",
				"Mode0"
			],
			[
				"se",
				"send"
			],
			[
				"d",
				"data"
			],
			[
				"pro",
				"port_num"
			]
		]
	},
	"buffers":
	[
		{
			"file": "comments_replied_to.txt",
			"settings":
			{
				"buffer_size": 0,
				"line_ending": "Unix"
			}
		},
		{
			"file": "botinfo.py",
			"settings":
			{
				"buffer_size": 215,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import praw, os, re\nfrom botinfo import Start\n\n\nif not os.path.isfile(\"posts_replied_to.txt\"): #Checks to see if there is a file\n\tposts_replied_to = []\n\nelse: #just goes through the information from the post that have been replied to\n\twith open(\"posts_replied_to.txt\", \"r\") as f:\n\t\tposts_replied_to = f.read()\n\t\tposts_replied_to = posts_replied_to.split(\"\\n\")\n\t\tposts_replied_to = list(filter(None, posts_replied_to))\n\n\nif not os.path.isfile(\"comments_replied_to.txt\"): #again checks to if there a file there\n\tcomments_replied_to = []\nelse:\n\twith open(\"comments_replied_to.txt\", \"r\") as f: # reads the file\n\t\tcomments_replied_to = f.read()\n\t\tcomments_replied_to = comments_replied_to.split(\"\\n\")\n\t\tcomments_replied_to = list(filter(None, comments_replied_to))\n\nreddit = Start()\nsubreddit =  reddit.subreddit(\"usefulbottest\")\nprint(comments_replied_to)\nprint(posts_replied_to)\n\nfor submission in subreddit.hot(limit=5): #gets submissions from the subreddit. Here it has a limit of 5\n\tif submission.id not in posts_replied_to:\n\t\tif  re.search(\"skills\", submission.title, re.IGNORECASE):\n\t\t\tposts_replied_to.append(submission.id)\n\t\t\tsubmission.reply(\"Usebot says that it worked\")\n\t\t\tprint(\"Bot replying to : \", submission.title)\n\t\t\t\nwith open(\"posts_replied_to.txt\", \"w\") as f:3 \n\tfor post_id in posts_replied_to:\n\t\tf.write(post_id + \"\\n\")\n\ncomments = subreddit.stream.comments() #Gets comments that are there\n\nnumreplies = 0\n\n\n\nwhile True:\n\tf = open(\"comments_replied_to.txt\", \"w\")\n\tfor comment in comments:\n\t\ttext = comment.body\n\t\tauthor = comment.author\n\t\tif re.search(\"comment\", str(text), re.IGNORECASE) and comment.id not in comments_replied_to:\n\t\t\tcomments_replied_to.append(comment.id)\n\t\t\tf.write(comment_id + \"\\n\")\n\t\t\tcomment.reply (\"There is no kidding here %s\" % author)\n\t\t\tprint(\"Bot replying to :\", text)\n\t\t\tbreak\n\nprint(\"complted\")\nwith open(\"comments_replied_to.txt\", \"w\") as f:\n\tfor comment_id in comments_replied_to:\n\t\tf.write(comment_id + \"\\n\")\n",
			"file": "main.py",
			"file_size": 2014,
			"file_write_time": 131513827031433809,
			"settings":
			{
				"buffer_size": 1960,
				"line_ending": "Windows"
			}
		},
		{
			"file": "posts_replied_to.txt",
			"settings":
			{
				"buffer_size": 7,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/j/Documents/Redditbot"
	],
	"file_history":
	[
		"/home/j/.wine/drive_c/users/j/AppData/LocalLow/Ludeon Studios/RimWorld by Ludeon Studios/Saves/Swaggers.rws",
		"/home/j/Downloads/drive-download-20180130T235229Z-001/shapedef.py",
		"/home/j/.wine/drive_c/users/j/AppData/LocalLow/Ludeon Studios/RimWorld by Ludeon Studios/Saves/Sparks.rws",
		"/home/j/Downloads/Conversation With Computer (1).py",
		"/home/j/Downloads/Conversation With Computer.py",
		"/home/j/Documents/Web/index.html",
		"/home/j/.wine/drive_c/users/j/AppData/LocalLow/Ludeon Studios/RimWorld by Ludeon Studios/Saves/Bedias.rws",
		"/mnt/F/Server/RimWorld/Mods/Maybe I am an asshole/Defs/Thoughts_Memory_Death.xml",
		"/mnt/F/Server/RimWorld/Mods/Maybe I am an asshole/Defs/Thoughts_Memory_Misc.xml",
		"/mnt/F/Server/RimWorld/Mods/rimworld-tradingspot-20170616/About/About.xml",
		"/home/j/git/Drive FTP/start.sh",
		"/home/j/Server/index.html",
		"/home/j/Documents/Redditbot/botinfo.py",
		"/home/j/Documents/pythontest/stuff.txt",
		"/home/j/Documents/pythontest/server.py",
		"/home/j/Documents/pythontest/client.py"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"Ivey",
			"Joyce",
			"Kotschak",
			"Vasalo",
			"Goodwin",
			"Squid",
			"Kanade",
			"McFarland",
			"Jupiter",
			"Fleming",
			"Joyce",
			"Vasalo",
			"shift",
			"Goodwin",
			"Squid",
			"Vongrimm",
			"McFarland",
			"Jupiter",
			"Fleming",
			"McFarland",
			"Vasalo",
			"Kanade",
			"Fleming",
			"Fallout",
			"Isis"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "comments_replied_to.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 0,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "botinfo.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 215,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "main.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1960,
						"regions":
						{
						},
						"selection":
						[
							[
								1276,
								1276
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 107.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "posts_replied_to.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "bit.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
